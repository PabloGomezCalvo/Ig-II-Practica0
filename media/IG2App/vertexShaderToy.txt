#version 330 core

in vec4 aPos;
in vec3 aNormal; 
in vec2 aTexCoords;

out vec3 FragPos;
out vec3 Normal; // en world space
out vec2 TexCoords;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main() {
 
FragPos = vec3(model * aPos); // en world space
Normal = mat3(transpose(inverse(model))) * aNormal;
TexCoords = aTexCoords;
gl_Position = projection * view * vec4(FragPos, 1.0);
}