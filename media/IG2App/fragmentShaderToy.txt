#version 330 core
out vec4 FragColor;

uniform sampler2D diffuse; // los struct no los usamos en Ogre
uniform sampler2D specular;
uniform float shininess;

uniform vec3 positionL; 
uniform vec3 ambientL;
uniform vec3 diffuseL;
uniform vec3 specularL;

in vec3 FragPos; // en world space
in vec3 Normal; // en world space
in vec2 TexCoords;
uniform vec3 viewPos; // en world space
uniform Material material;
uniform Light light;


void main() {
/* vec4 color1 = vec4(texture(texture1,vUv1));
if(color1.r > 0.5)
discard;

gl_FragColor = color1; 
*/

vec3 ambient = light.ambientL * texture(material.diffuse, TexCoords).rgb;

vec3 norm = normalize(Normal);
vec3 lightDir = normalize(light.positionL ‐ FragPos);
float diff = max(dot(norm, lightDir), 0.0);
vec3 diffuse= light.diffuseL * diff * texture(material.diffuse, TexCoords).rgb;

vec3 viewDir = normalize(viewPos ‐ FragPos);
vec3 reflectDir = reflect(‐lightDir, norm);
float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess);
vec3 specular = light.specularL *spec* texture(material.specular, TexCoords).rgb;
vec3 result = ambient + diffuse + specular;
FragColor = vec4(result, 1.0);
}

